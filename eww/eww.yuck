;; ** Variables ***********************************************************************
;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)


;; ** Widgets *************************************************************************

;; Music
(defwidget music [] 
  (box :class "genwin" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
       (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
       (box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
            (label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
            (label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
            (box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
                 (button :class "btn_prev" :onclick "scripts/music_info --prev" "玲")
                 (button :class "btn_play" :onclick "scripts/music_info --toggle" STATUS)
                 (button :class "btn_next" :onclick "scripts/music_info --next" "怜"))
            (box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false"
                 (scale :min 0 :active "true" :max 100 :value CURRENT)))))

;; power buttons
(defwidget logout [] 
  (box :class "genwin" :vexpand "false" :hexpand "false"
       (button :class "btn_logout" :onclick "hyprcrtl dispatch exit" "󰈆")))
(defwidget sleep []
  (box :class "genwin" :vexpand "false" :hexpand "false"
       (button :class "btn_sleep" :onclick "systemctl suspend" "")))
(defwidget reboot []
  (box :class "genwin" :vexpand "false" :hexpand "false"
       (button :class "btn_reboot" :onclick "systemctl reboot" "󰁙")))
(defwidget poweroff []
  (box :class "genwin" :vexpand "false" :hexpand "false"
       (button :class "btn_poweroff" :onclick "systemctl poweroff" "⏻")))


;; ** Windows *************************************************************************

;; music
(defwindow music :stacking "fg" :focusable "false" :active "true" :monitor 0
           :geometry (geometry :x 100 :y 10 :width 610 :height 280)
           (music))

(defwindow power :stacking "fg" :focusable "false" :active "true" :monitor 0
           :geometry (geometry :x 2294 :y 0 :width 265 :height 60)
           :class "power"
           (box (sleep) (logout) (reboot) (poweroff))
           )
